//Design Code
module demux1x2(output out1,out2,input sel,in);
  assign out1=in&(~sel);
  assign out2=in&sel;
endmodule

module exor_gate(output exor_op,exnor_op,input a,b);
  wire o1,o2,o3,o4,o5,o6,o7,o8;
  demux1x2 a1(o1,o2,b,a);
  demux1x2 a2(o3,o4,a,b);
  demux1x2 a3(o5,o6,o1,1);
  demux1x2 a4(o7,o8,o3,o5);
  demux1x2 a5(exor_op,exnor_op,o7,1);
endmodule

//Test Bench Code
module tb();
  wire exor_op,exnor_op;
  reg a,b;
  exor_gate DUT(exor_op,exnor_op,a,b);
  integer i;
  initial
    begin
      for(i=0;i<4;i=i+1)
        begin
          {a,b}=i;
          #10;
        end
    end
  
  initial
    begin
      $timeformat(-9,0,"ns",10);
      $monitor("time=%0t,a=%b,b=%b,exor_op=%b,exnor_op=%b",$time,a,b,exor_op,exnor_op);
    end
  initial
    begin
      $dumpfile("test.vcd");
      $dumpvars(1);
    end
endmodule
